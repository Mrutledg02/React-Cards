{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { v1 as uuid } from \"uuid\";\n\n/** useAxios hook for fetching & storing data from a URL.\n * Returns [data array, addData function]\n */\nfunction useAxios(baseUrl) {\n  _s();\n  const [responses, setResponses] = useState([]);\n  const addResponseData = async (urlSuffix = \"\") => {\n    const response = await axios.get(`${baseUrl}${urlSuffix}`);\n    setResponses(resps => [...resps, {\n      ...response.data,\n      id: uuid()\n    }]);\n  };\n  return [responses, addResponseData];\n}\n\n/** Custom hook for flipping a card. Returns [isFacingUp, flipCardFn] */\n_s(useAxios, \"vMQZFOHJbpBfbx+C6jBQHAS5iO4=\");\nfunction useFlip() {\n  _s2();\n  const [isFacingUp, setIsFacingUp] = useState(true);\n  const flipCard = () => {\n    setIsFacingUp(isUp => !isUp);\n  };\n  return [isFacingUp, flipCard];\n}\n_s2(useFlip, \"MAa1uxaU8Uj1WEqjPNN6CqCOgcw=\");\nexport { useFlip, useAxios };","map":{"version":3,"names":["useState","axios","v1","uuid","useAxios","baseUrl","_s","responses","setResponses","addResponseData","urlSuffix","response","get","resps","data","id","useFlip","_s2","isFacingUp","setIsFacingUp","flipCard","isUp"],"sources":["/home/megan/react-cards-pokemon/src/hooks.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { v1 as uuid } from \"uuid\";\n\n/** useAxios hook for fetching & storing data from a URL.\n * Returns [data array, addData function]\n */\nfunction useAxios(baseUrl) {\n  const [responses, setResponses] = useState([]);\n\n  const addResponseData = async (urlSuffix = \"\") => {\n    const response = await axios.get(`${baseUrl}${urlSuffix}`);\n    setResponses(resps => [...resps, { ...response.data, id: uuid() }]);\n  };\n\n  return [responses, addResponseData];\n}\n\n/** Custom hook for flipping a card. Returns [isFacingUp, flipCardFn] */\nfunction useFlip() {\n  const [isFacingUp, setIsFacingUp] = useState(true);\n  const flipCard = () => {\n    setIsFacingUp(isUp => !isUp);\n  };\n  return [isFacingUp, flipCard];\n}\n\nexport { useFlip, useAxios };"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;;AAEjC;AACA;AACA;AACA,SAASC,QAAQA,CAACC,OAAO,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMS,eAAe,GAAG,MAAAA,CAAOC,SAAS,GAAG,EAAE,KAAK;IAChD,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,GAAGP,OAAO,GAAGK,SAAS,EAAE,CAAC;IAC1DF,YAAY,CAACK,KAAK,IAAI,CAAC,GAAGA,KAAK,EAAE;MAAE,GAAGF,QAAQ,CAACG,IAAI;MAAEC,EAAE,EAAEZ,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;EACrE,CAAC;EAED,OAAO,CAACI,SAAS,EAAEE,eAAe,CAAC;AACrC;;AAEA;AAAAH,EAAA,CAXSF,QAAQ;AAYjB,SAASY,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMoB,QAAQ,GAAGA,CAAA,KAAM;IACrBD,aAAa,CAACE,IAAI,IAAI,CAACA,IAAI,CAAC;EAC9B,CAAC;EACD,OAAO,CAACH,UAAU,EAAEE,QAAQ,CAAC;AAC/B;AAACH,GAAA,CANQD,OAAO;AAQhB,SAASA,OAAO,EAAEZ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}